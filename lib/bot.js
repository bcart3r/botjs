// Generated by CoffeeScript 1.3.3
(function() {
  var Bot, irc,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  irc = require('./irc');

  Bot = (function(_super) {

    __extends(Bot, _super);

    function Bot() {
      this.quit = __bind(this.quit, this);

      this.on = __bind(this.on, this);

      this.part = __bind(this.part, this);

      this.changeNick = __bind(this.changeNick, this);

      this.join = __bind(this.join, this);

      this.pm = __bind(this.pm, this);

      this.msg = __bind(this.msg, this);
      return Bot.__super__.constructor.apply(this, arguments);
    }

    Bot.prototype.msg = function(chan, msg) {
      return this.write("PRIVMSG " + chan + " :" + msg);
    };

    Bot.prototype.pm = function(user, msg) {
      return this.write("PRIVMSG " + user + " :" + msg);
    };

    Bot.prototype.join = function() {
      var args, msg;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      msg = ("JOIN " + args[0] + " :" + args[1])(args[1] ? void 0 : "JOIN " + args[0]);
      return this.write(msg);
    };

    Bot.prototype.changeNick = function(nick) {
      this.nick = nick;
      return this.write("NICK " + nick);
    };

    Bot.prototype.part = function(chan) {
      return this.write("PART " + chan);
    };

    Bot.prototype.on = function(match, callback) {
      return this.plugins.push({
        matcher: match,
        callback: callback
      });
    };

    Bot.prototype.quit = function(reason) {
      return this.write("QUIT :" + reason);
    };

    return Bot;

  })(irc.Irc);

  exports.Bot = Bot;

}).call(this);
